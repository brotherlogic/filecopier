// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        (unknown)
// source: filecopier.proto

package filecopier

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CopyStatus int32

const (
	CopyStatus_UNKNOWN     CopyStatus = 0
	CopyStatus_IN_QUEUE    CopyStatus = 1
	CopyStatus_IN_PROGRESS CopyStatus = 2
	CopyStatus_COMPLETE    CopyStatus = 3
)

// Enum value maps for CopyStatus.
var (
	CopyStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "IN_QUEUE",
		2: "IN_PROGRESS",
		3: "COMPLETE",
	}
	CopyStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"IN_QUEUE":    1,
		"IN_PROGRESS": 2,
		"COMPLETE":    3,
	}
)

func (x CopyStatus) Enum() *CopyStatus {
	p := new(CopyStatus)
	*p = x
	return p
}

func (x CopyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CopyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_filecopier_proto_enumTypes[0].Descriptor()
}

func (CopyStatus) Type() protoreflect.EnumType {
	return &file_filecopier_proto_enumTypes[0]
}

func (x CopyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CopyStatus.Descriptor instead.
func (CopyStatus) EnumDescriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{0}
}

type CopyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputFile    string `protobuf:"bytes,1,opt,name=input_file,json=inputFile,proto3" json:"input_file,omitempty"`
	InputServer  string `protobuf:"bytes,2,opt,name=input_server,json=inputServer,proto3" json:"input_server,omitempty"`
	OutputFile   string `protobuf:"bytes,3,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	OutputServer string `protobuf:"bytes,4,opt,name=output_server,json=outputServer,proto3" json:"output_server,omitempty"`
	Priority     int32  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Key          int64  `protobuf:"varint,6,opt,name=key,proto3" json:"key,omitempty"`
	Callback     string `protobuf:"bytes,7,opt,name=callback,proto3" json:"callback,omitempty"`
}

func (x *CopyRequest) Reset() {
	*x = CopyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyRequest) ProtoMessage() {}

func (x *CopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyRequest.ProtoReflect.Descriptor instead.
func (*CopyRequest) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{0}
}

func (x *CopyRequest) GetInputFile() string {
	if x != nil {
		return x.InputFile
	}
	return ""
}

func (x *CopyRequest) GetInputServer() string {
	if x != nil {
		return x.InputServer
	}
	return ""
}

func (x *CopyRequest) GetOutputFile() string {
	if x != nil {
		return x.OutputFile
	}
	return ""
}

func (x *CopyRequest) GetOutputServer() string {
	if x != nil {
		return x.OutputServer
	}
	return ""
}

func (x *CopyRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CopyRequest) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *CopyRequest) GetCallback() string {
	if x != nil {
		return x.Callback
	}
	return ""
}

type CopyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MillisToCopy int64      `protobuf:"varint,1,opt,name=millis_to_copy,json=millisToCopy,proto3" json:"millis_to_copy,omitempty"`
	Status       CopyStatus `protobuf:"varint,2,opt,name=status,proto3,enum=filecopier.CopyStatus" json:"status,omitempty"`
	TimeInQueue  int64      `protobuf:"varint,3,opt,name=time_in_queue,json=timeInQueue,proto3" json:"time_in_queue,omitempty"`
	Error        string     `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	IndexInQueue int32      `protobuf:"varint,5,opt,name=index_in_queue,json=indexInQueue,proto3" json:"index_in_queue,omitempty"`
	Priority     int32      `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	ErrorCode    int32      `protobuf:"varint,7,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *CopyResponse) Reset() {
	*x = CopyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyResponse) ProtoMessage() {}

func (x *CopyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyResponse.ProtoReflect.Descriptor instead.
func (*CopyResponse) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{1}
}

func (x *CopyResponse) GetMillisToCopy() int64 {
	if x != nil {
		return x.MillisToCopy
	}
	return 0
}

func (x *CopyResponse) GetStatus() CopyStatus {
	if x != nil {
		return x.Status
	}
	return CopyStatus_UNKNOWN
}

func (x *CopyResponse) GetTimeInQueue() int64 {
	if x != nil {
		return x.TimeInQueue
	}
	return 0
}

func (x *CopyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CopyResponse) GetIndexInQueue() int32 {
	if x != nil {
		return x.IndexInQueue
	}
	return 0
}

func (x *CopyResponse) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CopyResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type KeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *KeyRequest) Reset() {
	*x = KeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRequest) ProtoMessage() {}

func (x *KeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRequest.ProtoReflect.Descriptor instead.
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{2}
}

func (x *KeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type KeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mykey string `protobuf:"bytes,1,opt,name=mykey,proto3" json:"mykey,omitempty"`
}

func (x *KeyResponse) Reset() {
	*x = KeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyResponse) ProtoMessage() {}

func (x *KeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyResponse.ProtoReflect.Descriptor instead.
func (*KeyResponse) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{3}
}

func (x *KeyResponse) GetMykey() string {
	if x != nil {
		return x.Mykey
	}
	return ""
}

type AcceptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *AcceptsRequest) Reset() {
	*x = AcceptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptsRequest) ProtoMessage() {}

func (x *AcceptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptsRequest.ProtoReflect.Descriptor instead.
func (*AcceptsRequest) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptsRequest) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type AcceptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server []string `protobuf:"bytes,1,rep,name=server,proto3" json:"server,omitempty"`
	Type   string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AcceptsResponse) Reset() {
	*x = AcceptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptsResponse) ProtoMessage() {}

func (x *AcceptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptsResponse.ProtoReflect.Descriptor instead.
func (*AcceptsResponse) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptsResponse) GetServer() []string {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *AcceptsResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CallbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key int64 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CallbackRequest) Reset() {
	*x = CallbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackRequest) ProtoMessage() {}

func (x *CallbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackRequest.ProtoReflect.Descriptor instead.
func (*CallbackRequest) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{6}
}

func (x *CallbackRequest) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

type CallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CallbackResponse) Reset() {
	*x = CallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecopier_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackResponse) ProtoMessage() {}

func (x *CallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_filecopier_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackResponse.ProtoReflect.Descriptor instead.
func (*CallbackResponse) Descriptor() ([]byte, []int) {
	return file_filecopier_proto_rawDescGZIP(), []int{7}
}

var File_filecopier_proto protoreflect.FileDescriptor

var file_filecopier_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x22, 0xdf,
	0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x22, 0xff, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x63,
	0x6f, 0x70, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x54, 0x6f, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x70, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x69, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x0b, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x79, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x79, 0x6b, 0x65, 0x79, 0x22,
	0x28, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x0f, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x12, 0x0a,
	0x10, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x46, 0x0a, 0x0a, 0x43, 0x6f, 0x70, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e,
	0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x32, 0xd9, 0x02, 0x0a, 0x11, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x07, 0x44, 0x69, 0x72, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x17, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x04, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65,
	0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x70, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x66,
	0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65,
	0x72, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x66, 0x69, 0x6c,
	0x65, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70,
	0x69, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5d, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x70,
	0x69, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x08, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f,
	0x70, 0x69, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x70, 0x69, 0x65,
	0x72, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filecopier_proto_rawDescOnce sync.Once
	file_filecopier_proto_rawDescData = file_filecopier_proto_rawDesc
)

func file_filecopier_proto_rawDescGZIP() []byte {
	file_filecopier_proto_rawDescOnce.Do(func() {
		file_filecopier_proto_rawDescData = protoimpl.X.CompressGZIP(file_filecopier_proto_rawDescData)
	})
	return file_filecopier_proto_rawDescData
}

var file_filecopier_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_filecopier_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_filecopier_proto_goTypes = []interface{}{
	(CopyStatus)(0),          // 0: filecopier.CopyStatus
	(*CopyRequest)(nil),      // 1: filecopier.CopyRequest
	(*CopyResponse)(nil),     // 2: filecopier.CopyResponse
	(*KeyRequest)(nil),       // 3: filecopier.KeyRequest
	(*KeyResponse)(nil),      // 4: filecopier.KeyResponse
	(*AcceptsRequest)(nil),   // 5: filecopier.AcceptsRequest
	(*AcceptsResponse)(nil),  // 6: filecopier.AcceptsResponse
	(*CallbackRequest)(nil),  // 7: filecopier.CallbackRequest
	(*CallbackResponse)(nil), // 8: filecopier.CallbackResponse
}
var file_filecopier_proto_depIdxs = []int32{
	0, // 0: filecopier.CopyResponse.status:type_name -> filecopier.CopyStatus
	1, // 1: filecopier.FileCopierService.DirCopy:input_type -> filecopier.CopyRequest
	1, // 2: filecopier.FileCopierService.QueueCopy:input_type -> filecopier.CopyRequest
	1, // 3: filecopier.FileCopierService.Copy:input_type -> filecopier.CopyRequest
	3, // 4: filecopier.FileCopierService.ReceiveKey:input_type -> filecopier.KeyRequest
	5, // 5: filecopier.FileCopierService.Accepts:input_type -> filecopier.AcceptsRequest
	7, // 6: filecopier.FileCopierCallback.Callback:input_type -> filecopier.CallbackRequest
	2, // 7: filecopier.FileCopierService.DirCopy:output_type -> filecopier.CopyResponse
	2, // 8: filecopier.FileCopierService.QueueCopy:output_type -> filecopier.CopyResponse
	2, // 9: filecopier.FileCopierService.Copy:output_type -> filecopier.CopyResponse
	4, // 10: filecopier.FileCopierService.ReceiveKey:output_type -> filecopier.KeyResponse
	6, // 11: filecopier.FileCopierService.Accepts:output_type -> filecopier.AcceptsResponse
	8, // 12: filecopier.FileCopierCallback.Callback:output_type -> filecopier.CallbackResponse
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_filecopier_proto_init() }
func file_filecopier_proto_init() {
	if File_filecopier_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filecopier_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecopier_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filecopier_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_filecopier_proto_goTypes,
		DependencyIndexes: file_filecopier_proto_depIdxs,
		EnumInfos:         file_filecopier_proto_enumTypes,
		MessageInfos:      file_filecopier_proto_msgTypes,
	}.Build()
	File_filecopier_proto = out.File
	file_filecopier_proto_rawDesc = nil
	file_filecopier_proto_goTypes = nil
	file_filecopier_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FileCopierServiceClient is the client API for FileCopierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileCopierServiceClient interface {
	DirCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	QueueCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	ReceiveKey(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*KeyResponse, error)
	Accepts(ctx context.Context, in *AcceptsRequest, opts ...grpc.CallOption) (*AcceptsResponse, error)
}

type fileCopierServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileCopierServiceClient(cc grpc.ClientConnInterface) FileCopierServiceClient {
	return &fileCopierServiceClient{cc}
}

func (c *fileCopierServiceClient) DirCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/DirCopy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) QueueCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/QueueCopy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/Copy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) ReceiveKey(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*KeyResponse, error) {
	out := new(KeyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/ReceiveKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) Accepts(ctx context.Context, in *AcceptsRequest, opts ...grpc.CallOption) (*AcceptsResponse, error) {
	out := new(AcceptsResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/Accepts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileCopierServiceServer is the server API for FileCopierService service.
type FileCopierServiceServer interface {
	DirCopy(context.Context, *CopyRequest) (*CopyResponse, error)
	QueueCopy(context.Context, *CopyRequest) (*CopyResponse, error)
	Copy(context.Context, *CopyRequest) (*CopyResponse, error)
	ReceiveKey(context.Context, *KeyRequest) (*KeyResponse, error)
	Accepts(context.Context, *AcceptsRequest) (*AcceptsResponse, error)
}

// UnimplementedFileCopierServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileCopierServiceServer struct {
}

func (*UnimplementedFileCopierServiceServer) DirCopy(context.Context, *CopyRequest) (*CopyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DirCopy not implemented")
}
func (*UnimplementedFileCopierServiceServer) QueueCopy(context.Context, *CopyRequest) (*CopyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueueCopy not implemented")
}
func (*UnimplementedFileCopierServiceServer) Copy(context.Context, *CopyRequest) (*CopyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Copy not implemented")
}
func (*UnimplementedFileCopierServiceServer) ReceiveKey(context.Context, *KeyRequest) (*KeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveKey not implemented")
}
func (*UnimplementedFileCopierServiceServer) Accepts(context.Context, *AcceptsRequest) (*AcceptsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Accepts not implemented")
}

func RegisterFileCopierServiceServer(s *grpc.Server, srv FileCopierServiceServer) {
	s.RegisterService(&_FileCopierService_serviceDesc, srv)
}

func _FileCopierService_DirCopy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).DirCopy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/DirCopy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).DirCopy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_QueueCopy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).QueueCopy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/QueueCopy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).QueueCopy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_Copy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).Copy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/Copy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).Copy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_ReceiveKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).ReceiveKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/ReceiveKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).ReceiveKey(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_Accepts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).Accepts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/Accepts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).Accepts(ctx, req.(*AcceptsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileCopierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "filecopier.FileCopierService",
	HandlerType: (*FileCopierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DirCopy",
			Handler:    _FileCopierService_DirCopy_Handler,
		},
		{
			MethodName: "QueueCopy",
			Handler:    _FileCopierService_QueueCopy_Handler,
		},
		{
			MethodName: "Copy",
			Handler:    _FileCopierService_Copy_Handler,
		},
		{
			MethodName: "ReceiveKey",
			Handler:    _FileCopierService_ReceiveKey_Handler,
		},
		{
			MethodName: "Accepts",
			Handler:    _FileCopierService_Accepts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filecopier.proto",
}

// FileCopierCallbackClient is the client API for FileCopierCallback service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileCopierCallbackClient interface {
	Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error)
}

type fileCopierCallbackClient struct {
	cc grpc.ClientConnInterface
}

func NewFileCopierCallbackClient(cc grpc.ClientConnInterface) FileCopierCallbackClient {
	return &fileCopierCallbackClient{cc}
}

func (c *fileCopierCallbackClient) Callback(ctx context.Context, in *CallbackRequest, opts ...grpc.CallOption) (*CallbackResponse, error) {
	out := new(CallbackResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierCallback/Callback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileCopierCallbackServer is the server API for FileCopierCallback service.
type FileCopierCallbackServer interface {
	Callback(context.Context, *CallbackRequest) (*CallbackResponse, error)
}

// UnimplementedFileCopierCallbackServer can be embedded to have forward compatible implementations.
type UnimplementedFileCopierCallbackServer struct {
}

func (*UnimplementedFileCopierCallbackServer) Callback(context.Context, *CallbackRequest) (*CallbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Callback not implemented")
}

func RegisterFileCopierCallbackServer(s *grpc.Server, srv FileCopierCallbackServer) {
	s.RegisterService(&_FileCopierCallback_serviceDesc, srv)
}

func _FileCopierCallback_Callback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierCallbackServer).Callback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierCallback/Callback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierCallbackServer).Callback(ctx, req.(*CallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileCopierCallback_serviceDesc = grpc.ServiceDesc{
	ServiceName: "filecopier.FileCopierCallback",
	HandlerType: (*FileCopierCallbackServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Callback",
			Handler:    _FileCopierCallback_Callback_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filecopier.proto",
}
