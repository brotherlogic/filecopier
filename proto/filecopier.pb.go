// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filecopier.proto

package filecopier

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CopyStatus int32

const (
	CopyStatus_UNKNOWN     CopyStatus = 0
	CopyStatus_IN_QUEUE    CopyStatus = 1
	CopyStatus_IN_PROGRESS CopyStatus = 2
	CopyStatus_COMPLETE    CopyStatus = 3
)

var CopyStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "IN_QUEUE",
	2: "IN_PROGRESS",
	3: "COMPLETE",
}

var CopyStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"IN_QUEUE":    1,
	"IN_PROGRESS": 2,
	"COMPLETE":    3,
}

func (x CopyStatus) String() string {
	return proto.EnumName(CopyStatus_name, int32(x))
}

func (CopyStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{0}
}

type CopyRequest struct {
	InputFile            string   `protobuf:"bytes,1,opt,name=input_file,json=inputFile,proto3" json:"input_file,omitempty"`
	InputServer          string   `protobuf:"bytes,2,opt,name=input_server,json=inputServer,proto3" json:"input_server,omitempty"`
	OutputFile           string   `protobuf:"bytes,3,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	OutputServer         string   `protobuf:"bytes,4,opt,name=output_server,json=outputServer,proto3" json:"output_server,omitempty"`
	Priority             int32    `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyRequest) Reset()         { *m = CopyRequest{} }
func (m *CopyRequest) String() string { return proto.CompactTextString(m) }
func (*CopyRequest) ProtoMessage()    {}
func (*CopyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{0}
}

func (m *CopyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyRequest.Unmarshal(m, b)
}
func (m *CopyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyRequest.Marshal(b, m, deterministic)
}
func (m *CopyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyRequest.Merge(m, src)
}
func (m *CopyRequest) XXX_Size() int {
	return xxx_messageInfo_CopyRequest.Size(m)
}
func (m *CopyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CopyRequest proto.InternalMessageInfo

func (m *CopyRequest) GetInputFile() string {
	if m != nil {
		return m.InputFile
	}
	return ""
}

func (m *CopyRequest) GetInputServer() string {
	if m != nil {
		return m.InputServer
	}
	return ""
}

func (m *CopyRequest) GetOutputFile() string {
	if m != nil {
		return m.OutputFile
	}
	return ""
}

func (m *CopyRequest) GetOutputServer() string {
	if m != nil {
		return m.OutputServer
	}
	return ""
}

func (m *CopyRequest) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type CopyResponse struct {
	MillisToCopy         int64      `protobuf:"varint,1,opt,name=millis_to_copy,json=millisToCopy,proto3" json:"millis_to_copy,omitempty"`
	Status               CopyStatus `protobuf:"varint,2,opt,name=status,proto3,enum=filecopier.CopyStatus" json:"status,omitempty"`
	TimeInQueue          int64      `protobuf:"varint,3,opt,name=time_in_queue,json=timeInQueue,proto3" json:"time_in_queue,omitempty"`
	Error                string     `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	IndexInQueue         int32      `protobuf:"varint,5,opt,name=index_in_queue,json=indexInQueue,proto3" json:"index_in_queue,omitempty"`
	Priority             int32      `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	ErrorCode            int32      `protobuf:"varint,7,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CopyResponse) Reset()         { *m = CopyResponse{} }
func (m *CopyResponse) String() string { return proto.CompactTextString(m) }
func (*CopyResponse) ProtoMessage()    {}
func (*CopyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{1}
}

func (m *CopyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyResponse.Unmarshal(m, b)
}
func (m *CopyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyResponse.Marshal(b, m, deterministic)
}
func (m *CopyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyResponse.Merge(m, src)
}
func (m *CopyResponse) XXX_Size() int {
	return xxx_messageInfo_CopyResponse.Size(m)
}
func (m *CopyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CopyResponse proto.InternalMessageInfo

func (m *CopyResponse) GetMillisToCopy() int64 {
	if m != nil {
		return m.MillisToCopy
	}
	return 0
}

func (m *CopyResponse) GetStatus() CopyStatus {
	if m != nil {
		return m.Status
	}
	return CopyStatus_UNKNOWN
}

func (m *CopyResponse) GetTimeInQueue() int64 {
	if m != nil {
		return m.TimeInQueue
	}
	return 0
}

func (m *CopyResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *CopyResponse) GetIndexInQueue() int32 {
	if m != nil {
		return m.IndexInQueue
	}
	return 0
}

func (m *CopyResponse) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *CopyResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type KeyRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Server               string   `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyRequest) Reset()         { *m = KeyRequest{} }
func (m *KeyRequest) String() string { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()    {}
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{2}
}

func (m *KeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyRequest.Unmarshal(m, b)
}
func (m *KeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyRequest.Marshal(b, m, deterministic)
}
func (m *KeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyRequest.Merge(m, src)
}
func (m *KeyRequest) XXX_Size() int {
	return xxx_messageInfo_KeyRequest.Size(m)
}
func (m *KeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyRequest proto.InternalMessageInfo

func (m *KeyRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type KeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyResponse) Reset()         { *m = KeyResponse{} }
func (m *KeyResponse) String() string { return proto.CompactTextString(m) }
func (*KeyResponse) ProtoMessage()    {}
func (*KeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{3}
}

func (m *KeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyResponse.Unmarshal(m, b)
}
func (m *KeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyResponse.Marshal(b, m, deterministic)
}
func (m *KeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyResponse.Merge(m, src)
}
func (m *KeyResponse) XXX_Size() int {
	return xxx_messageInfo_KeyResponse.Size(m)
}
func (m *KeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeyResponse proto.InternalMessageInfo

type AcceptsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptsRequest) Reset()         { *m = AcceptsRequest{} }
func (m *AcceptsRequest) String() string { return proto.CompactTextString(m) }
func (*AcceptsRequest) ProtoMessage()    {}
func (*AcceptsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{4}
}

func (m *AcceptsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptsRequest.Unmarshal(m, b)
}
func (m *AcceptsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptsRequest.Marshal(b, m, deterministic)
}
func (m *AcceptsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptsRequest.Merge(m, src)
}
func (m *AcceptsRequest) XXX_Size() int {
	return xxx_messageInfo_AcceptsRequest.Size(m)
}
func (m *AcceptsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptsRequest proto.InternalMessageInfo

type AcceptsResponse struct {
	Server               []string `protobuf:"bytes,1,rep,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptsResponse) Reset()         { *m = AcceptsResponse{} }
func (m *AcceptsResponse) String() string { return proto.CompactTextString(m) }
func (*AcceptsResponse) ProtoMessage()    {}
func (*AcceptsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3a5e06368efcf77b, []int{5}
}

func (m *AcceptsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptsResponse.Unmarshal(m, b)
}
func (m *AcceptsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptsResponse.Marshal(b, m, deterministic)
}
func (m *AcceptsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptsResponse.Merge(m, src)
}
func (m *AcceptsResponse) XXX_Size() int {
	return xxx_messageInfo_AcceptsResponse.Size(m)
}
func (m *AcceptsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptsResponse proto.InternalMessageInfo

func (m *AcceptsResponse) GetServer() []string {
	if m != nil {
		return m.Server
	}
	return nil
}

func init() {
	proto.RegisterEnum("filecopier.CopyStatus", CopyStatus_name, CopyStatus_value)
	proto.RegisterType((*CopyRequest)(nil), "filecopier.CopyRequest")
	proto.RegisterType((*CopyResponse)(nil), "filecopier.CopyResponse")
	proto.RegisterType((*KeyRequest)(nil), "filecopier.KeyRequest")
	proto.RegisterType((*KeyResponse)(nil), "filecopier.KeyResponse")
	proto.RegisterType((*AcceptsRequest)(nil), "filecopier.AcceptsRequest")
	proto.RegisterType((*AcceptsResponse)(nil), "filecopier.AcceptsResponse")
}

func init() { proto.RegisterFile("filecopier.proto", fileDescriptor_3a5e06368efcf77b) }

var fileDescriptor_3a5e06368efcf77b = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xeb, 0xb8, 0x49, 0x9a, 0xb1, 0x93, 0x9a, 0x15, 0x6a, 0x2d, 0x23, 0x44, 0x30, 0x1c,
	0x0a, 0x87, 0x1c, 0x8a, 0xc4, 0x05, 0x89, 0x3f, 0x4a, 0x5d, 0x14, 0x05, 0x9c, 0xd6, 0x69, 0xc4,
	0xd1, 0x02, 0x67, 0x90, 0x56, 0xa4, 0x5e, 0xd7, 0x5e, 0x57, 0xe4, 0xb1, 0x78, 0x1c, 0x9e, 0x06,
	0xb4, 0xe3, 0x8d, 0x9d, 0x50, 0x4e, 0xbd, 0x65, 0x7f, 0xf3, 0xcd, 0xa7, 0x99, 0xf9, 0x62, 0x70,
	0xbe, 0xf3, 0x15, 0x26, 0x22, 0xe3, 0x98, 0x8f, 0xb2, 0x5c, 0x48, 0xc1, 0xa0, 0x21, 0xfe, 0x2f,
	0x03, 0xac, 0xb1, 0xc8, 0xd6, 0x11, 0xde, 0x94, 0x58, 0x48, 0xf6, 0x18, 0x80, 0xa7, 0x59, 0x29,
	0x63, 0xa5, 0x71, 0x8d, 0xa1, 0x71, 0xd2, 0x8b, 0x7a, 0x44, 0xce, 0xf9, 0x0a, 0xd9, 0x53, 0xb0,
	0xab, 0x72, 0x81, 0xf9, 0x2d, 0xe6, 0x6e, 0x8b, 0x04, 0x16, 0xb1, 0x39, 0x21, 0xf6, 0x04, 0x2c,
	0x51, 0xca, 0xda, 0xc2, 0x24, 0x05, 0x54, 0x88, 0x3c, 0x9e, 0x41, 0x5f, 0x0b, 0xb4, 0xc9, 0x3e,
	0x49, 0xec, 0x0a, 0x6a, 0x17, 0x0f, 0x0e, 0xb2, 0x9c, 0x8b, 0x9c, 0xcb, 0xb5, 0xdb, 0x1e, 0x1a,
	0x27, 0xed, 0xa8, 0x7e, 0xfb, 0x7f, 0x0c, 0xb0, 0xab, 0x99, 0x8b, 0x4c, 0xa4, 0x05, 0xb2, 0xe7,
	0x30, 0xb8, 0xe6, 0xab, 0x15, 0x2f, 0x62, 0x29, 0xe2, 0x44, 0x64, 0x6b, 0x1a, 0xdc, 0x8c, 0xec,
	0x8a, 0x5e, 0x09, 0xa5, 0x66, 0x23, 0xe8, 0x14, 0xf2, 0xab, 0x2c, 0x0b, 0x9a, 0x7a, 0x70, 0x7a,
	0x34, 0xda, 0xba, 0x8c, 0x52, 0xcc, 0xa9, 0x1a, 0x69, 0x15, 0xf3, 0xa1, 0x2f, 0xf9, 0x35, 0xc6,
	0x3c, 0x8d, 0x6f, 0x4a, 0x2c, 0xab, 0x55, 0xcc, 0xc8, 0x52, 0x70, 0x92, 0x5e, 0x2a, 0xc4, 0x1e,
	0x42, 0x1b, 0xf3, 0x5c, 0x6c, 0x76, 0xa8, 0x1e, 0x6a, 0x1e, 0x9e, 0x2e, 0xf1, 0x67, 0xd3, 0x5a,
	0xad, 0x60, 0x13, 0xdd, 0xf4, 0x6e, 0xaf, 0xd8, 0xd9, 0x5d, 0x51, 0xc5, 0x40, 0x56, 0x71, 0x22,
	0x96, 0xe8, 0x76, 0xa9, 0xda, 0x23, 0x32, 0x16, 0x4b, 0xf4, 0x5f, 0x03, 0x4c, 0xb1, 0xce, 0xcc,
	0x01, 0xf3, 0x07, 0xae, 0x75, 0x58, 0xea, 0x27, 0x3b, 0x82, 0xce, 0x4e, 0x40, 0xfa, 0xe5, 0xf7,
	0xc1, 0xa2, 0xbe, 0xea, 0x6e, 0xbe, 0x03, 0x83, 0x0f, 0x49, 0x82, 0x99, 0x2c, 0xb4, 0x95, 0xff,
	0x02, 0x0e, 0x6b, 0xa2, 0x8f, 0xdb, 0x78, 0x19, 0x43, 0xb3, 0xf1, 0x7a, 0x79, 0x0e, 0xd0, 0x1c,
	0x8d, 0x59, 0xd0, 0x5d, 0x84, 0xd3, 0x70, 0xf6, 0x25, 0x74, 0xf6, 0x98, 0x0d, 0x07, 0x93, 0x30,
	0xbe, 0x5c, 0x04, 0x8b, 0xc0, 0x31, 0xd8, 0x21, 0x58, 0x93, 0x30, 0xbe, 0x88, 0x66, 0x1f, 0xa3,
	0x60, 0x3e, 0x77, 0x5a, 0xaa, 0x3c, 0x9e, 0x7d, 0xbe, 0xf8, 0x14, 0x5c, 0x05, 0x8e, 0x79, 0xfa,
	0xbb, 0x05, 0x0f, 0xd4, 0xff, 0x62, 0x4c, 0x41, 0xa8, 0xf8, 0x79, 0x82, 0xec, 0x2d, 0x74, 0xcf,
	0x78, 0x4e, 0xb9, 0x1d, 0xff, 0x9b, 0x93, 0x1e, 0xd6, 0x73, 0xef, 0x16, 0xf4, 0x62, 0x7b, 0xec,
	0x3d, 0xf4, 0xe8, 0xca, 0xf7, 0x77, 0x78, 0x03, 0xfb, 0xf7, 0x6f, 0x7e, 0x07, 0x10, 0x61, 0x82,
	0xfc, 0x16, 0xa7, 0x2a, 0x8e, 0x6d, 0x65, 0x13, 0x9c, 0x77, 0x7c, 0x87, 0xd7, 0x06, 0x67, 0xd0,
	0xd5, 0x41, 0x30, 0x6f, 0x5b, 0xb5, 0x9b, 0x97, 0xf7, 0xe8, 0xbf, 0xb5, 0x8d, 0xcb, 0xb7, 0x0e,
	0x7d, 0xf0, 0xaf, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xaa, 0xfd, 0x02, 0x04, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileCopierServiceClient is the client API for FileCopierService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileCopierServiceClient interface {
	DirCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	QueueCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error)
	ReceiveKey(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*KeyResponse, error)
	Accepts(ctx context.Context, in *AcceptsRequest, opts ...grpc.CallOption) (*AcceptsResponse, error)
}

type fileCopierServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileCopierServiceClient(cc *grpc.ClientConn) FileCopierServiceClient {
	return &fileCopierServiceClient{cc}
}

func (c *fileCopierServiceClient) DirCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/DirCopy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) QueueCopy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/QueueCopy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyResponse, error) {
	out := new(CopyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/Copy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) ReceiveKey(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*KeyResponse, error) {
	out := new(KeyResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/ReceiveKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileCopierServiceClient) Accepts(ctx context.Context, in *AcceptsRequest, opts ...grpc.CallOption) (*AcceptsResponse, error) {
	out := new(AcceptsResponse)
	err := c.cc.Invoke(ctx, "/filecopier.FileCopierService/Accepts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileCopierServiceServer is the server API for FileCopierService service.
type FileCopierServiceServer interface {
	DirCopy(context.Context, *CopyRequest) (*CopyResponse, error)
	QueueCopy(context.Context, *CopyRequest) (*CopyResponse, error)
	Copy(context.Context, *CopyRequest) (*CopyResponse, error)
	ReceiveKey(context.Context, *KeyRequest) (*KeyResponse, error)
	Accepts(context.Context, *AcceptsRequest) (*AcceptsResponse, error)
}

func RegisterFileCopierServiceServer(s *grpc.Server, srv FileCopierServiceServer) {
	s.RegisterService(&_FileCopierService_serviceDesc, srv)
}

func _FileCopierService_DirCopy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).DirCopy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/DirCopy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).DirCopy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_QueueCopy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).QueueCopy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/QueueCopy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).QueueCopy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_Copy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).Copy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/Copy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).Copy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_ReceiveKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).ReceiveKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/ReceiveKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).ReceiveKey(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileCopierService_Accepts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileCopierServiceServer).Accepts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filecopier.FileCopierService/Accepts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileCopierServiceServer).Accepts(ctx, req.(*AcceptsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileCopierService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "filecopier.FileCopierService",
	HandlerType: (*FileCopierServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DirCopy",
			Handler:    _FileCopierService_DirCopy_Handler,
		},
		{
			MethodName: "QueueCopy",
			Handler:    _FileCopierService_QueueCopy_Handler,
		},
		{
			MethodName: "Copy",
			Handler:    _FileCopierService_Copy_Handler,
		},
		{
			MethodName: "ReceiveKey",
			Handler:    _FileCopierService_ReceiveKey_Handler,
		},
		{
			MethodName: "Accepts",
			Handler:    _FileCopierService_Accepts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filecopier.proto",
}
